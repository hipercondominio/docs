CONTROLES

Link
	* Descrição: Link para obter um novo conteúdo.
	* Pai: Container.
	* Filhos: Text.
	* Propriedades:
		href: Página html com conteúdo de destino.
		target: Seletor que especifica onde será inserido o conteúdo obtido pelo link.
		track: Determina se o link visitado será exibido em outra cor.
		status:
			link: Padrão. O link não está ativo.
			visited: O link foi visitado.
			active: O link está sendo observado.
	* Métodos:
	* Eventos:

Breadcrumb
	* Descrição: Listagem de links que aponta uma sequencia de páginas, migalha-de-pão.
	* Pai: Container.
	* Filhos: Link.
	* Propriedades:
	* Métodos:
	* Eventos:

Input 
	* Descrição: Equivale ao 'INPUT' do Html. Identico ao Html, adicionado dos recursos abaixo.
	* Pai: Container.
	* Filhos: Nenhum.
	* Propriedades:
		name: Nome do controle, usado para gerar o json de dados.
		value: Valor do controle, usado para gerar o json de dados.
		disabled[0,1]: Padrão 0. Determina se o usuário pode iteragir com o controle.
		helpDisabled: Texto de ajuda quando o controle estiver desabilitado.
		mask: uma máscara de entrada, formato de dados.
		chars: uma expressão regular caracteres válidos.
		align[*left, right]: alinhamento do texto.
	* Métodos:
	* Eventos:

InputGroup
	* Descrição: Equivale ao 'INPUT' do Html, com blocos de texto ou botões, antes e/ou depois, alinhados.
	* Pai: Container.
	* Filhos: Input, Text, Button.
	* Propriedades:
	* Métodos:
	* Eventos:
	
Group 
	* Descrição: Agrupador de campos.
	* Pai: Container.
	* Filhos: Vários.
	* Propriedades:
		state[0,1]: Padrão 0, fechado.
	* Métodos:
		toggle(): altera entre abertura e fechamento.
	* Eventos:

Label
	* Descrição: Título de campo.
	* Pai: Container.
	* Filhos: Nenhum.
	* Propriedades:
		related: Seletor do controle de iteração do usuário, normalmente um 'INPUT'.
		text: valor do campo.
		abbr: abreviatura. //todo:revisar tamanho mínimo para usar abreviatura.
		help: texto de ajuda quando usuário passa o mouse em cima.
	* Métodos:
	* Eventos:

Button
	* Descrição: Equivale ao 'BUTTON' do Html. Identico ao Html, adicionado dos recursos abaixo.
	* Pai: Container.
	* Filhos: Icon, Text.
	* Propriedades:
		name: Nome do controle, usado para gerar o json de dados.
		value: Valor do controle, usado para gerar o json de dados.
		disabled[0,1]: Padrão 0. Determina se o usuário pode iteragir com o controle.
		helpDisabled: Texto de ajuda quando o controle estiver desabilitado.
	* Eventos:

Entries
	* Descrição: Um grupo de opções já selecionadas pelo cliente.
	* Pai: Container.
	* Filhos: Entry.
	* Propriedades:
		name: Nome do controle, usado para gerar o json de dados.
		value: Valor do controle, usado para gerar o json de dados. É um vetor com as entradas.
		display: Texto que vai ser exibido, representando os itens selecionados, ex.: Mandar ${email} ${dias} antes do evento. Onde os valores em chaves são nomes de campos.
	* Métodos:
	* Eventos:

Entry
	* Descrição: Uma opção dentro de uma lista de opções. Ao clicar no 'x', exclui o item. Ao segurar ou duplo clique, inicia edição. Tecla 'ESC' ou clique fora, cancela.
	* Pai: Entries.
	* Filhos: Vários.
	* Propriedades:
		value: Dicionário de chave/valor, usado para gerar o json de dados.
		disabled[0,1]: Padrão 0. Determina se o usuário pode iteragir com o controle.
		helpDisabled: Texto de ajuda quando o controle estiver desabilitado.
		template[0,1]: Padrão 0. Determina se o item é um template de entrada. O primeiro item é sempre o template.
	* Métodos:
	* Eventos:
		click: ao clicar no icone de remoção dispara o método 'remove'.
		doubleClick,hold: no item, dipara o método 'edit'.
		key ESC: dispara o método 'cancel'.

Radio
	* Descrição: Equivale ao 'INPUT[type=radio]' do html. Identico ao Html, adicionado dos recursos abaixo.
	* Pai: Container.
	* Filhos: Nenhum.
	* Propriedades:
		name: Nome do controle, usado para gerar o json de dados.
		value: Valor do controle, usado para gerar o json de dados.
		disabled[0,1]: Padrão 0. Determina se o usuário pode iteragir com o controle.
		helpDisabled: Texto de ajuda quando o controle estiver desabilitado.
		text: Texto de descrição do controle.
	* Métodos:
	* Eventos:

Text
	* Descrição: Um bloco comum de texto pré-formatado.
	* Pai: Container.
	* Filhos: Nenhum, texto puro.
	* Propriedades:
	* Métodos:
	* Eventos:
	
Select
	* Descrição: Equivale ao 'SELECT' do html. Identico ao Html, adicionado dos recursos abaixo.
	* Pai: Container.
	* Filhos: Option.
	* Propriedades:
		required: força a criação de uma opção 'selecione', obrigando o usuário a trocar.
		name: Nome do controle, usado para gerar o json de dados.
		value: Valor do controle, usado para gerar o json de dados. Sempre um vetor.
		disabled[0,1]: Padrão 0. Determina se o usuário pode iteragir com o controle.
		helpDisabled: Texto de ajuda quando o controle estiver desabilitado.
		insert[0,1]: Padrão 0. Determina se o usuário pode incluir novas opções.  //todo: e como o cadastro pode validar os dados?
		hide[0,1]: Padrão 0. determina se o select vai se parecer com uma label caso tenha somente uma opção.
	* Métodos:
	* Eventos:

Number
	* Descrição: Equivale ao 'INPUT[type=number]' do html. Identico ao Html, adicionado dos recursos abaixo.
	* Pai: Container.
	* Filhos: Nenhum.
	* Propriedades:
		name: Nome do controle, usado para gerar o json de dados.
		value: Valor do controle, usado para gerar o json de dados.
		disabled[0,1]: Padrão 0. Determina se o usuário pode iteragir com o controle.
		helpDisabled: Texto de ajuda quando o controle estiver desabilitado.
	* Métodos:
	* Eventos:
	
Fieldset
	* Descrição: Equivale ao 'Fieldset' do html. Identico ao Html, adicionado dos recursos abaixo.
	* Pai: Container.
	* Filhos: Vários.
	* Propriedades:
		legend: Texto que aparecerá acima do fieldset.
	* Métodos:
	* Eventos:

Text
	* Descrição: Um bloco simples de texto.
	* Pai: Container.
	* Filhos: Nenhum.
	* Propriedades:
	* Métodos:
	* Eventos:
		
Icon
	* Descrição: Cria uma imagem compacta (baixa resolução).
	* Pai: Container.
	* Filhos: Nenhum.
	* Propriedades:
		href: Página html com conteúdo de destino.
		target: Seletor que especifica onde será inserido o conteúdo obtido pelo link.
		resolutions: resoluções disponíveis do ícone.
		legend: Texto que aparecerá abaixo do ícone.
		abbr: Abreviatura do texto quando necessário.
		counter: Badge com número de notificações relativas ao ícone.
	* Métodos:
		select: Seleciona uma resolução disponível do ícone.
	* Eventos:

NotifyIcon
	* Descrição: Cria uma imagem compacta (baixa resolução) para notificações.
	* Pai: Container.
	* Filhos: Nenhum.
	* Propriedades:
		href: Página html com conteúdo de destino.
		target: Seletor que especifica onde será inserido o conteúdo obtido pelo link.
		resolutions: resoluções disponíveis do ícone.
		legend: Texto que aparecerá abaixo do ícone.
		abbr: Abreviatura do texto quando necessário.
		counter: Badge com número de notificações relativas ao ícone.
	* Métodos:
	* Eventos:

Checkbox
	* Descrição: Equivale ao 'INPUT[type=checkbox]' do html. Identico ao Html, adicionado dos recursos abaixo.
	* Pai: Container.
	* Filhos: Vários.
	* Propriedades:
		name: Nome do controle, usado para gerar o json de dados.
		value: Valor do controle, usado para gerar o json de dados.
		disabled[0,1]: Padrão 0. Determina se o usuário pode iteragir com o controle.
		helpDisabled: Texto de ajuda quando o controle estiver desabilitado.
		text: Texto de descrição do controle.
	* Métodos:
	* Eventos:

Pager
	* Descrição: Conjuntos de links para páginas.
	* Pai: Container.
	* Filhos: Link.
	* Propriedades:
		target: Seletor que especifica onde será inserido o conteúdo obtido pelo link.
		first: Determina se aparecerá o botão ir para início.
		last: Determina se aparecerá o botão ir para fim.
		next: Determina se aparecerá o botão ir para próximo.
		prev: Determina se aparecerá o botão ir para anterior.
		records: Total de registros.
		recordsPage: Total de registros por página.
		page: Página atual.
		pages: Máximo de páginas que aparecem para uma ser selecionada.
	* Métodos:
	* Eventos:
	
PagerDescriptor
	* Descrição: Informação sobre o pager, ex.: Exibindo registros de 20 a 25 de 100.
	* Pai: Container.
	* Filhos: Link.
	* Propriedades:
		template: Modelo de exibição do controle, algo como Exibindo registros de {startRecord} a {endRecord} de {records}.
	* Métodos:
	* Eventos:

Grid
	* Descrição: Formato tabular de dados.
	* Pai: Container.
	* Filhos: Column.
	* Propriedades:
		ordering: Vetor com nome de colunas que estão ordenadas, ex.: nome asc,idade desc.
		startRecord: Número do registro inicial.
		endRecord: Número do registro final.
	* Métodos:
		refresh(): Submete todos os filtros, ordenação e paginação para o servidor afim de obter novos dados.
	* Eventos:
		
GridColumn
	* Descrição: Colunas de um grid.
	* Pai: Grid.
	* Filhos: Nenhum.
	* Propriedades:
		resize[0,1]: Determina se a coluna pode ser redimensionada pelo usuário; caso contrário, terá o tamanho máximo necessário para exibir os dados.
		order[0,1]: Determina se a coluna pode ser reordenada.
		filter: Vetor que determina os filtros aplicados, ex.: % teste (contém teste). Outras operações: >,<,>=,<=,<>,^%(inicia com),%$(termina com).
		align[left,center,right]: Alinhamento dos dados.
		overflow: Modo de tratamento de dados que não cabem na célula.
			suspension: Adiciona reticências no final
			breaking: Quebra a linha e continua embaixo.
		help: Texto de ajuda para a coluna/campo.
	* Métodos:
	* Eventos:

		
Calendar
	//todo: juntar vários antes de projetar

//todo: analisar se vale a pena virar controle
	Wizard
	Column
	Row
