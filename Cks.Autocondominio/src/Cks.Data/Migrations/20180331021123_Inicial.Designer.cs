// <auto-generated />
using Cks.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Cks.Data.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20180331021123_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cks.Data.Models.Agenda", b =>
                {
                    b.Property<int>("IdAgenda")
                        .HasColumnName("ID_AGENDA");

                    b.Property<string>("Atividade")
                        .IsRequired()
                        .HasColumnName("ATIVIDADE")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnName("COR")
                        .HasColumnType("char(7)");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<DateTime>("DtaComeco")
                        .HasColumnName("DTA_COMECO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaTermino")
                        .HasColumnName("DTA_TERMINO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAgendaPeriodo")
                        .HasColumnName("ID_AGENDA_PERIODO");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<bool>("Ocupado")
                        .HasColumnName("OCUPADO");

                    b.Property<int>("Situacao")
                        .HasColumnName("SITUACAO");

                    b.HasKey("IdAgenda");

                    b.HasIndex("IdAgendaPeriodo");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdPessoa");

                    b.ToTable("AGENDA");
                });

            modelBuilder.Entity("Cks.Data.Models.AgendaPeriodo", b =>
                {
                    b.Property<int>("IdAgendaPeriodo")
                        .HasColumnName("ID_AGENDA_PERIODO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaTermino")
                        .HasColumnName("DTA_TERMINO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("QtdeOcorrencia")
                        .HasColumnName("QTDE_OCORRENCIA");

                    b.Property<int>("QtdeRepeticao")
                        .HasColumnName("QTDE_REPETICAO");

                    b.Property<int>("TipoRepeticao")
                        .HasColumnName("TIPO_REPETICAO");

                    b.HasKey("IdAgendaPeriodo");

                    b.HasIndex("IdCondominio");

                    b.ToTable("AGENDA_PERIODO");
                });

            modelBuilder.Entity("Cks.Data.Models.AgendaSemana", b =>
                {
                    b.Property<int>("IdAgendaSemana")
                        .HasColumnName("ID_AGENDA_SEMANA");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<bool>("Dom")
                        .HasColumnName("DOM");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAgendaPeriodo")
                        .HasColumnName("ID_AGENDA_PERIODO");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<bool>("Qua")
                        .HasColumnName("QUA");

                    b.Property<bool>("Qui")
                        .HasColumnName("QUI");

                    b.Property<bool>("Seg")
                        .HasColumnName("SEG");

                    b.Property<bool>("Sex")
                        .HasColumnName("SEX");

                    b.Property<bool>("Sáb")
                        .HasColumnName("SÁB");

                    b.Property<bool>("Ter")
                        .HasColumnName("TER");

                    b.HasKey("IdAgendaSemana");

                    b.HasIndex("IdAgendaPeriodo");

                    b.HasIndex("IdCondominio");

                    b.ToTable("AGENDA_SEMANA");
                });

            modelBuilder.Entity("Cks.Data.Models.Anexo", b =>
                {
                    b.Property<int>("IdAnexo")
                        .HasColumnName("ID_ANEXO");

                    b.Property<string>("Conteudo")
                        .HasColumnName("CONTEUDO")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnName("DOCUMENTO")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasColumnName("EXTENSAO")
                        .HasColumnType("char(3)");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Pasta")
                        .IsRequired()
                        .HasColumnName("PASTA")
                        .HasMaxLength(800)
                        .IsUnicode(false);

                    b.Property<string>("Tags")
                        .HasColumnName("TAGS")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.HasKey("IdAnexo");

                    b.ToTable("ANEXO");
                });

            modelBuilder.Entity("Cks.Data.Models.AreaComum", b =>
                {
                    b.Property<int>("IdAreaComum")
                        .HasColumnName("ID_AREA_COMUM");

                    b.Property<decimal>("Capacidade")
                        .HasColumnName("CAPACIDADE")
                        .HasColumnType("numeric(5, 0)");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdCustoAreaComum")
                        .HasColumnName("ID_CUSTO_AREA_COMUM");

                    b.Property<int>("IdExclusividadeAreaComum")
                        .HasColumnName("ID_EXCLUSIVIDADE_AREA_COMUM");

                    b.Property<int>("IdRegraAreaComum")
                        .HasColumnName("ID_REGRA_AREA_COMUM");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("RegrasUso")
                        .IsRequired()
                        .HasColumnName("REGRAS_USO")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.HasKey("IdAreaComum");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdCustoAreaComum");

                    b.HasIndex("IdExclusividadeAreaComum");

                    b.HasIndex("IdRegraAreaComum");

                    b.ToTable("AREA_COMUM");
                });

            modelBuilder.Entity("Cks.Data.Models.Banco", b =>
                {
                    b.Property<int>("IdBanco")
                        .HasColumnName("ID_BANCO");

                    b.Property<int>("CodBano")
                        .HasColumnName("COD_BANO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnName("WEBSITE")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("IdBanco");

                    b.ToTable("BANCO");
                });

            modelBuilder.Entity("Cks.Data.Models.Condominio", b =>
                {
                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<string>("Aplido")
                        .IsRequired()
                        .HasColumnName("APLIDO")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("Cnpj")
                        .HasColumnName("CNPJ")
                        .HasColumnType("numeric(14, 0)");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("IdCondominio");

                    b.ToTable("CONDOMINIO");
                });

            modelBuilder.Entity("Cks.Data.Models.CondominioEndereco", b =>
                {
                    b.Property<int>("IdCondominioEndereco")
                        .HasColumnName("ID_CONDOMINIO_ENDERECO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdEndereco")
                        .HasColumnName("ID_ENDERECO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.HasKey("IdCondominioEndereco");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdEndereco");

                    b.ToTable("CONDOMINIO_ENDERECO");
                });

            modelBuilder.Entity("Cks.Data.Models.ConselhoCondominio", b =>
                {
                    b.Property<int>("IdConselhoCondominio")
                        .HasColumnName("ID_CONSELHO_CONDOMINIO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaMandato")
                        .HasColumnName("DTA_MANDATO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaTermino")
                        .HasColumnName("DTA_TERMINO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("Tipo")
                        .HasColumnName("TIPO");

                    b.HasKey("IdConselhoCondominio");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdPessoa");

                    b.ToTable("CONSELHO_CONDOMINIO");
                });

            modelBuilder.Entity("Cks.Data.Models.ContaBancaria", b =>
                {
                    b.Property<int>("IdContaBancaria")
                        .HasColumnName("ID_CONTA_BANCARIA");

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasColumnName("AGENCIA")
                        .HasColumnType("char(6)");

                    b.Property<string>("Conta")
                        .IsRequired()
                        .HasColumnName("CONTA")
                        .HasColumnType("char(11)");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdBanco")
                        .HasColumnName("ID_BANCO");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<DateTime>("Inicio")
                        .HasColumnName("INICIO")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Ordem")
                        .HasColumnName("ORDEM");

                    b.Property<bool>("Principal")
                        .HasColumnName("PRINCIPAL");

                    b.Property<decimal>("Saldo")
                        .HasColumnName("SALDO")
                        .HasColumnType("money");

                    b.Property<int>("Tipo")
                        .HasColumnName("TIPO");

                    b.HasKey("IdContaBancaria");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdCondominio");

                    b.ToTable("CONTA_BANCARIA");
                });

            modelBuilder.Entity("Cks.Data.Models.Contato", b =>
                {
                    b.Property<int>("IdContato")
                        .HasColumnName("ID_CONTATO");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasColumnName("DDD")
                        .HasColumnType("char(1)");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("TELEFONE")
                        .HasColumnType("char(1)");

                    b.Property<int>("Tipo")
                        .HasColumnName("TIPO");

                    b.HasKey("IdContato");

                    b.HasIndex("IdPessoa");

                    b.ToTable("CONTATO");
                });

            modelBuilder.Entity("Cks.Data.Models.CustoAreaComum", b =>
                {
                    b.Property<int>("IdCustoAreaComum")
                        .HasColumnName("ID_CUSTO_AREA_COMUM");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdContaCategoria")
                        .HasColumnName("ID_CONTA_CATEGORIA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<DateTime>("PgtoDia")
                        .HasColumnName("PGTO_DIA")
                        .HasColumnType("date");

                    b.Property<bool>("PgtoTaxaCondominial")
                        .HasColumnName("PGTO_TAXA_CONDOMINIAL");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("money");

                    b.HasKey("IdCustoAreaComum");

                    b.ToTable("CUSTO_AREA_COMUM");
                });

            modelBuilder.Entity("Cks.Data.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .HasColumnName("ID_ENDERECO");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnName("BAIRRO")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnName("CEP")
                        .HasColumnType("char(7)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnName("CIDADE")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnName("ESTADO")
                        .HasColumnType("char(2)");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnName("LOGRADOURO")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnName("NUMERO")
                        .HasColumnType("char(5)");

                    b.HasKey("IdEndereco");

                    b.ToTable("ENDERECO");
                });

            modelBuilder.Entity("Cks.Data.Models.ExclusividadeAreaComum", b =>
                {
                    b.Property<int>("IdExclusividadeAreaComum")
                        .HasColumnName("ID_EXCLUSIVIDADE_AREA_COMUM");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnName("COMPLEMENTO")
                        .HasColumnType("char(4)");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("TipoLote")
                        .HasColumnName("TIPO_LOTE");

                    b.HasKey("IdExclusividadeAreaComum");

                    b.ToTable("EXCLUSIVIDADE_AREA_COMUM");
                });

            modelBuilder.Entity("Cks.Data.Models.Grupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .HasColumnName("ID_GRUPO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("NomeGrupo")
                        .IsRequired()
                        .HasColumnName("NOME_GRUPO")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdGrupo");

                    b.HasIndex("IdCondominio");

                    b.ToTable("GRUPO");
                });

            modelBuilder.Entity("Cks.Data.Models.GrupoPessoa", b =>
                {
                    b.Property<int>("IdGrupoPessoa")
                        .HasColumnName("ID_GRUPO_PESSOA");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdGrupo")
                        .HasColumnName("ID_GRUPO");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.HasKey("IdGrupoPessoa");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdPessoa");

                    b.ToTable("GRUPO_PESSOA");
                });

            modelBuilder.Entity("Cks.Data.Models.Infracao", b =>
                {
                    b.Property<int>("IdInfracao")
                        .HasColumnName("ID_INFRACAO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<bool?>("EnviarMail")
                        .HasColumnName("ENVIAR_MAIL");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("IdSindicoCondominio")
                        .HasColumnName("ID_SINDICO_CONDOMINIO");

                    b.Property<int>("IdUnidade")
                        .HasColumnName("ID_UNIDADE");

                    b.Property<int>("TipoInfracao")
                        .HasColumnName("TIPO_INFRACAO");

                    b.Property<decimal?>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("money");

                    b.HasKey("IdInfracao");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdSindicoCondominio");

                    b.HasIndex("IdUnidade");

                    b.ToTable("INFRACAO");
                });

            modelBuilder.Entity("Cks.Data.Models.Leitura", b =>
                {
                    b.Property<int>("IdLeitura")
                        .HasColumnName("ID_LEITURA");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaLeitura")
                        .HasColumnName("DTA_LEITURA")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("IdTipoLeitura")
                        .HasColumnName("ID_TIPO_LEITURA");

                    b.Property<int>("IdUnidade")
                        .HasColumnName("ID_UNIDADE");

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("numeric(4, 0)");

                    b.HasKey("IdLeitura");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdTipoLeitura");

                    b.ToTable("LEITURA");
                });

            modelBuilder.Entity("Cks.Data.Models.MarcaVeiculo", b =>
                {
                    b.Property<int>("IdMarcaVeiculo")
                        .HasColumnName("ID_MARCA_VEICULO");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnName("MARCA")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("IdMarcaVeiculo");

                    b.ToTable("MARCA_VEICULO");
                });

            modelBuilder.Entity("Cks.Data.Models.Modulo", b =>
                {
                    b.Property<int>("IdModulo")
                        .HasColumnName("ID_MODULO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Plano")
                        .IsRequired()
                        .HasColumnName("PLANO")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("money");

                    b.Property<decimal>("ValorPlano")
                        .HasColumnName("VALOR_PLANO")
                        .HasColumnType("money");

                    b.HasKey("IdModulo");

                    b.ToTable("MODULO");
                });

            modelBuilder.Entity("Cks.Data.Models.ModuloCondominio", b =>
                {
                    b.Property<int>("IdModuloCondominio")
                        .HasColumnName("ID_MODULO_CONDOMINIO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaRenovacao")
                        .HasColumnName("DTA_RENOVACAO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnName("VALOR_TOTAL")
                        .HasColumnType("money");

                    b.HasKey("IdModuloCondominio");

                    b.HasIndex("IdCondominio");

                    b.ToTable("MODULO_CONDOMINIO");
                });

            modelBuilder.Entity("Cks.Data.Models.Permissao", b =>
                {
                    b.Property<int>("IdPermissao")
                        .HasColumnName("ID_PERMISSAO");

                    b.Property<bool?>("Acesso")
                        .HasColumnName("ACESSO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Escrita")
                        .HasColumnName("ESCRITA");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("IdSubmodulo")
                        .HasColumnName("ID_SUBMODULO");

                    b.Property<bool?>("Leitura")
                        .HasColumnName("LEITURA");

                    b.Property<bool?>("Remocao")
                        .HasColumnName("REMOCAO");

                    b.HasKey("IdPermissao");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdPessoa");

                    b.HasIndex("IdSubmodulo");

                    b.ToTable("PERMISSAO");
                });

            modelBuilder.Entity("Cks.Data.Models.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasColumnType("char(11)");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaNascimeno")
                        .HasColumnName("DTA_NASCIMENO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnName("MAIL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnName("RG")
                        .HasColumnType("char(8)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("SENHA")
                        .HasColumnType("char(8)");

                    b.Property<bool>("Sexo")
                        .HasColumnName("SEXO");

                    b.HasKey("IdPessoa");

                    b.ToTable("PESSOA");
                });

            modelBuilder.Entity("Cks.Data.Models.PessoaUnidade", b =>
                {
                    b.Property<int>("IdPessoaUnidade")
                        .HasColumnName("ID_PESSOA_UNIDADE");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("IdUnidade")
                        .HasColumnName("ID_UNIDADE");

                    b.Property<bool>("Situacao")
                        .HasColumnName("SITUACAO");

                    b.HasKey("IdPessoaUnidade");

                    b.HasIndex("IdPessoa");

                    b.HasIndex("IdUnidade");

                    b.ToTable("PESSOA_UNIDADE");
                });

            modelBuilder.Entity("Cks.Data.Models.RegraAreaComum", b =>
                {
                    b.Property<int>("IdRegraAreaComum")
                        .HasColumnName("ID_REGRA_AREA_COMUM");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("QtdePeriodo")
                        .HasColumnName("QTDE_PERIODO");

                    b.Property<int>("QtdeVezes")
                        .HasColumnName("QTDE_VEZES");

                    b.Property<int>("Tempo")
                        .HasColumnName("TEMPO");

                    b.HasKey("IdRegraAreaComum");

                    b.HasIndex("IdPessoa");

                    b.ToTable("REGRA_AREA_COMUM");
                });

            modelBuilder.Entity("Cks.Data.Models.ReservaAreaComum", b =>
                {
                    b.Property<int>("IdReservaAreaComum")
                        .HasColumnName("ID_RESERVA_AREA_COMUM");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAreaComum")
                        .HasColumnName("ID_AREA_COMUM");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("Periodo")
                        .HasColumnName("PERIODO");

                    b.Property<int>("Situacao")
                        .HasColumnName("SITUACAO");

                    b.HasKey("IdReservaAreaComum");

                    b.HasIndex("IdAreaComum");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdPessoa");

                    b.ToTable("RESERVA_AREA_COMUM");
                });

            modelBuilder.Entity("Cks.Data.Models.Residente", b =>
                {
                    b.Property<int>("IdResidente")
                        .HasColumnName("ID_RESIDENTE");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdPessoaResidente")
                        .HasColumnName("ID_PESSOA_RESIDENTE");

                    b.Property<int>("IdPessoaUnidade")
                        .HasColumnName("ID_PESSOA_UNIDADE");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.HasKey("IdResidente");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdPessoaResidente");

                    b.HasIndex("IdPessoaUnidade");

                    b.ToTable("RESIDENTE");
                });

            modelBuilder.Entity("Cks.Data.Models.SindicoCondominio", b =>
                {
                    b.Property<int>("IdSindicoCondominio")
                        .HasColumnName("ID_SINDICO_CONDOMINIO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaMandato")
                        .HasColumnName("DTA_MANDATO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaTermino")
                        .HasColumnName("DTA_TERMINO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdPessoa")
                        .HasColumnName("ID_PESSOA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.HasKey("IdSindicoCondominio");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdPessoa");

                    b.ToTable("SINDICO_CONDOMINIO");
                });

            modelBuilder.Entity("Cks.Data.Models.SindicoEndereco", b =>
                {
                    b.Property<int>("IdSindicoEndereco")
                        .HasColumnName("ID_SINDICO_ENDERECO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdEndereco")
                        .HasColumnName("ID_ENDERECO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("IdSindicoCondominio")
                        .HasColumnName("ID_SINDICO_CONDOMINIO");

                    b.HasKey("IdSindicoEndereco");

                    b.HasIndex("IdEndereco");

                    b.HasIndex("IdSindicoCondominio");

                    b.ToTable("SINDICO_ENDERECO");
                });

            modelBuilder.Entity("Cks.Data.Models.Submodulo", b =>
                {
                    b.Property<int>("IdSubmodulo")
                        .HasColumnName("ID_SUBMODULO");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdModulo")
                        .HasColumnName("ID_MODULO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("TITULO")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdSubmodulo");

                    b.HasIndex("IdModulo");

                    b.ToTable("SUBMODULO");
                });

            modelBuilder.Entity("Cks.Data.Models.TipoLeitura", b =>
                {
                    b.Property<int>("IdTipoLeitura")
                        .HasColumnName("ID_TIPO_LEITURA");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaFechamento")
                        .HasColumnName("DTA_FECHAMENTO")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnName("UNIDADE")
                        .HasColumnType("char(5)");

                    b.HasKey("IdTipoLeitura");

                    b.HasIndex("IdCondominio");

                    b.ToTable("TIPO_LEITURA");
                });

            modelBuilder.Entity("Cks.Data.Models.Unidade", b =>
                {
                    b.Property<int>("IdUnidade")
                        .HasColumnName("ID_UNIDADE");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<int>("NumeroAndar")
                        .HasColumnName("NUMERO_ANDAR");

                    b.Property<int>("NumeroTipoLote")
                        .HasColumnName("NUMERO_TIPO_LOTE");

                    b.Property<int>("NumeroUnidade")
                        .HasColumnName("NUMERO_UNIDADE");

                    b.Property<int>("Situacao")
                        .HasColumnName("SITUACAO");

                    b.Property<int>("TipoLote")
                        .HasColumnName("TIPO_LOTE");

                    b.HasKey("IdUnidade");

                    b.HasIndex("IdCondominio");

                    b.ToTable("UNIDADE");
                });

            modelBuilder.Entity("Cks.Data.Models.Veiculo", b =>
                {
                    b.Property<int>("IdVeiculo")
                        .HasColumnName("ID_VEICULO");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnName("ANO")
                        .HasColumnType("char(4)");

                    b.Property<bool>("Delet")
                        .HasColumnName("DELET");

                    b.Property<DateTime>("DtaInicio")
                        .HasColumnName("DTA_INICIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtaUpdate")
                        .HasColumnName("DTA_UPDATE")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCondominio")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<int>("IdMarca")
                        .HasColumnName("ID_MARCA");

                    b.Property<int>("IdResponsavel")
                        .HasColumnName("ID_RESPONSAVEL");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnName("MODELO")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnName("PLACA")
                        .HasColumnType("char(7)");

                    b.Property<string>("Vaga")
                        .HasColumnName("VAGA")
                        .HasColumnType("char(4)");

                    b.HasKey("IdVeiculo");

                    b.HasIndex("IdCondominio");

                    b.HasIndex("IdMarca");

                    b.ToTable("VEICULO");
                });

            modelBuilder.Entity("Cks.Data.Models.Agenda", b =>
                {
                    b.HasOne("Cks.Data.Models.AgendaPeriodo", "IdAgendaPeriodoNavigation")
                        .WithMany("Agenda")
                        .HasForeignKey("IdAgendaPeriodo")
                        .HasConstraintName("FK_ID_ID_AGENDA_PERIODO_AGENDA");

                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("Agenda")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_AGENDA");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("Agenda")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_AGENDA");
                });

            modelBuilder.Entity("Cks.Data.Models.AgendaPeriodo", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("AgendaPeriodo")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_AGENDA_PERIODO");
                });

            modelBuilder.Entity("Cks.Data.Models.AgendaSemana", b =>
                {
                    b.HasOne("Cks.Data.Models.AgendaPeriodo", "IdAgendaPeriodoNavigation")
                        .WithMany("AgendaSemana")
                        .HasForeignKey("IdAgendaPeriodo")
                        .HasConstraintName("FK_ID_AGENDA_PERIODO_AGENDA_SEMANA");

                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("AgendaSemana")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_AGENDA_SEMANA");
                });

            modelBuilder.Entity("Cks.Data.Models.AreaComum", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("AreaComum")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_AREA_COMUM");

                    b.HasOne("Cks.Data.Models.CustoAreaComum", "IdCustoAreaComumNavigation")
                        .WithMany("AreaComum")
                        .HasForeignKey("IdCustoAreaComum")
                        .HasConstraintName("FK_ID_CUSTO_AREA_COMUM_AREA_COMUM");

                    b.HasOne("Cks.Data.Models.ExclusividadeAreaComum", "IdExclusividadeAreaComumNavigation")
                        .WithMany("AreaComum")
                        .HasForeignKey("IdExclusividadeAreaComum")
                        .HasConstraintName("FK_ID_EXCLUSIVIDADE_AREA_COMUM_AREA_COMUM");

                    b.HasOne("Cks.Data.Models.RegraAreaComum", "IdRegraAreaComumNavigation")
                        .WithMany("AreaComum")
                        .HasForeignKey("IdRegraAreaComum")
                        .HasConstraintName("FK_ID_REGRA_AREA_COMUM_AREA_COMUM");
                });

            modelBuilder.Entity("Cks.Data.Models.CondominioEndereco", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("CondominioEndereco")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_ENDERECO");

                    b.HasOne("Cks.Data.Models.Endereco", "IdEnderecoNavigation")
                        .WithMany("CondominioEndereco")
                        .HasForeignKey("IdEndereco")
                        .HasConstraintName("FK_ID_ENDERECO_CONDOMINIO_ENDERECO");
                });

            modelBuilder.Entity("Cks.Data.Models.ConselhoCondominio", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("ConselhoCondominio")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_CONSELHO_CONDOMINIO");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("ConselhoCondominio")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_CONSELHO_CONDOMINIO");
                });

            modelBuilder.Entity("Cks.Data.Models.ContaBancaria", b =>
                {
                    b.HasOne("Cks.Data.Models.Banco", "IdBancoNavigation")
                        .WithMany("ContaBancaria")
                        .HasForeignKey("IdBanco")
                        .HasConstraintName("FK_ID_BANCO_CONTA_BANCARIA");

                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("ContaBancaria")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_CONTA_BANCARIA");
                });

            modelBuilder.Entity("Cks.Data.Models.Contato", b =>
                {
                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("Contato")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_CONTATO");
                });

            modelBuilder.Entity("Cks.Data.Models.Grupo", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("Grupo")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_GRUPO");
                });

            modelBuilder.Entity("Cks.Data.Models.GrupoPessoa", b =>
                {
                    b.HasOne("Cks.Data.Models.Grupo", "IdGrupoNavigation")
                        .WithMany("GrupoPessoa")
                        .HasForeignKey("IdGrupo")
                        .HasConstraintName("FK_ID_GRUPO_GRUPO_PESSOA");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("GrupoPessoa")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_GRUPO_PESSOA");
                });

            modelBuilder.Entity("Cks.Data.Models.Infracao", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("Infracao")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_INFRACAO");

                    b.HasOne("Cks.Data.Models.SindicoCondominio", "IdSindicoCondominioNavigation")
                        .WithMany("Infracao")
                        .HasForeignKey("IdSindicoCondominio")
                        .HasConstraintName("FK_ID_SINDICO_CONDOMINIO_INFRACAO");

                    b.HasOne("Cks.Data.Models.Unidade", "IdUnidadeNavigation")
                        .WithMany("Infracao")
                        .HasForeignKey("IdUnidade")
                        .HasConstraintName("FK_ID_UNIDADE_INFRACAO");
                });

            modelBuilder.Entity("Cks.Data.Models.Leitura", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("Leitura")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_LEITURA");

                    b.HasOne("Cks.Data.Models.TipoLeitura", "IdTipoLeituraNavigation")
                        .WithMany("Leitura")
                        .HasForeignKey("IdTipoLeitura")
                        .HasConstraintName("FK_ID_TIPO_LEITURA_LEITURA");
                });

            modelBuilder.Entity("Cks.Data.Models.ModuloCondominio", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("ModuloCondominio")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_MODULO_CONDOMINIO");
                });

            modelBuilder.Entity("Cks.Data.Models.Permissao", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("Permissao")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_PERMISSAO");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("Permissao")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_PERMISSAO");

                    b.HasOne("Cks.Data.Models.Submodulo", "IdSubmoduloNavigation")
                        .WithMany("Permissao")
                        .HasForeignKey("IdSubmodulo")
                        .HasConstraintName("FK_ID_SUBMODULO_PERMISSAO");
                });

            modelBuilder.Entity("Cks.Data.Models.PessoaUnidade", b =>
                {
                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("PessoaUnidade")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_PESSOA_UNIDADE");

                    b.HasOne("Cks.Data.Models.Unidade", "IdUnidadeNavigation")
                        .WithMany("PessoaUnidade")
                        .HasForeignKey("IdUnidade")
                        .HasConstraintName("FK_ID_UNIDADE_PESSOA_UNIDADE");
                });

            modelBuilder.Entity("Cks.Data.Models.RegraAreaComum", b =>
                {
                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("RegraAreaComum")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_REGRA_AREA_COMUM");
                });

            modelBuilder.Entity("Cks.Data.Models.ReservaAreaComum", b =>
                {
                    b.HasOne("Cks.Data.Models.AreaComum", "IdAreaComumNavigation")
                        .WithMany("ReservaAreaComum")
                        .HasForeignKey("IdAreaComum")
                        .HasConstraintName("FK_ID_AREA_COMUM_RESERVA_AREA_COMUM");

                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("ReservaAreaComum")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_RESERVA_AREA_COMUM");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("ReservaAreaComum")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_RESERVA_AREA_COMUM");
                });

            modelBuilder.Entity("Cks.Data.Models.Residente", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("Residente")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_RESIDENTE");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaResidenteNavigation")
                        .WithMany("ResidenteIdPessoaResidenteNavigation")
                        .HasForeignKey("IdPessoaResidente")
                        .HasConstraintName("FK_ID_PESSOA_RESIDENTE_RESIDENTE");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaUnidadeNavigation")
                        .WithMany("ResidenteIdPessoaUnidadeNavigation")
                        .HasForeignKey("IdPessoaUnidade")
                        .HasConstraintName("FK_ID_PESSOA_UNIDADE_RESIDENTE");
                });

            modelBuilder.Entity("Cks.Data.Models.SindicoCondominio", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("SindicoCondominio")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_SINDICO_CONDOMINIO");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdPessoaNavigation")
                        .WithMany("SindicoCondominio")
                        .HasForeignKey("IdPessoa")
                        .HasConstraintName("FK_ID_PESSOA_SINDICO_CONDOMINIO");
                });

            modelBuilder.Entity("Cks.Data.Models.SindicoEndereco", b =>
                {
                    b.HasOne("Cks.Data.Models.Endereco", "IdEnderecoNavigation")
                        .WithMany("SindicoEndereco")
                        .HasForeignKey("IdEndereco")
                        .HasConstraintName("FK_ID_ENDERECO_SINDICO_ENDERECO");

                    b.HasOne("Cks.Data.Models.Pessoa", "IdSindicoCondominioNavigation")
                        .WithMany("SindicoEndereco")
                        .HasForeignKey("IdSindicoCondominio")
                        .HasConstraintName("FK_ID_SINDICO_CONDOMINIO");
                });

            modelBuilder.Entity("Cks.Data.Models.Submodulo", b =>
                {
                    b.HasOne("Cks.Data.Models.Modulo", "IdModuloNavigation")
                        .WithMany("Submodulo")
                        .HasForeignKey("IdModulo")
                        .HasConstraintName("FK_ID_MODULO_SUBMODULO");
                });

            modelBuilder.Entity("Cks.Data.Models.TipoLeitura", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("TipoLeitura")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_TIPO_LEITURA");
                });

            modelBuilder.Entity("Cks.Data.Models.Unidade", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("Unidade")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_UNIDADE");
                });

            modelBuilder.Entity("Cks.Data.Models.Veiculo", b =>
                {
                    b.HasOne("Cks.Data.Models.Condominio", "IdCondominioNavigation")
                        .WithMany("Veiculo")
                        .HasForeignKey("IdCondominio")
                        .HasConstraintName("FK_ID_CONDOMINIO_VEICULO");

                    b.HasOne("Cks.Data.Models.MarcaVeiculo", "IdMarcaNavigation")
                        .WithMany("Veiculo")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("FK_ID_MARCA");
                });
#pragma warning restore 612, 618
        }
    }
}
